name: Deploy API

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ backend-pipeline ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # run_tests:
  #   name: Run Django Tests
  #   runs-on: ubuntu-latest
  #   services:
  #     db:
  #       image: postgres:12.3-alpine
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: github_actions
  #       ports:
  #         - 5432:5432
  #       options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.75
  #     - name: Install dependencies
  #       run: pip install -r app/requirements.txt
  #     - name: Run tests
  #       run: python covid-api-backend/manage.py test covid-api-backend/
  #       env:
  #         SYSTEM_ENV: GITHUB_WORKFLOW

  # This workflow contains a single job called "build"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Run tests
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.9
      - name: Install dependencies
        run: pip install -r covid-api-backend/requirements.txt
      - name: Run tests
        run: python covid-api-backend/manage.py test covid-api-backend/

      # Runs a single command using the runners shell
      - uses: akhileshns/heroku-deploy@v3.6.8 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "pt-alpha-final-project"
          heroku_email: "veronica25@gmail.com"
          appdir: "covid-api-backend"
          # healthcheck: "https://pt-alpha-final-project.herokuapp.com/health"
          # checkstring: "{\"DatabaseBackend\":\"working\"}"
          # rollbackonhealthcheckfailed: true 
          # delay: 5