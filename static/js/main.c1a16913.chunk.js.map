{"version":3,"sources":["components/State_Page/State-Page.js","components/Map/Map.js","pages/HomePage/HomePage.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["State_Page","props","STATENAME","sName","id","className","Map","history","useHistory","useEffect","am4core","am4themes_animated","chart","am4maps","geodata","am4geodata_usaLow","projection","AlbersUsa","polygonSeries","series","push","heatRules","property","target","mapPolygons","template","min","colors","getIndex","brighten","max","useGeodata","data","value","heatLegend","createChild","align","valign","width","marginRight","background","fill","fillOpacity","padding","valueAxis","axisRanges","create","label","horizontalCenter","renderer","labels","adapter","add","labelText","events","on","ev","map","getKey","dataItem","values","low","minRange","text","numberFormatter","format","high","maxRange","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","states","properties","dataContext","name","setSName","HomePage","setStateName","NavBar","to","App","useState","stateName","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c1a16913.chunk.js","sourcesContent":["import React from 'react'\nimport './State-PageCss.css'\n\nfunction State_Page(props){\n  const STATENAME = props.sName\n  return(\n    <div id=\"StatePage-container\">\n      <div className=\"a-api_feed_title\">PUBLIC COMMENT</div>\n      <div className=\"a-api_feed_container\"></div>\n      <div className=\"a-state_name_container\"><h2>{STATENAME}</h2></div>\n      <div className=\"a-state_info_container\"></div>\n    </div>\n\n  )\n}\n\nexport default State_Page\n","import React, { useEffect } from 'react'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_usaLow from \"@amcharts/amcharts4-geodata/usaLow.js\";\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated.js'\n\nimport { useHistory } from 'react-router-dom'\nimport './MapCss.css'\n\n\nfunction Map (props){\n// Setting useHistory to a variable history. Use to push to component state-page\nconst history = useHistory()\n\nuseEffect(()=>{\n  \n// Themes begin\nam4core.useTheme(am4themes_animated);\n\n\n// Create map instance\nlet chart = am4core.create(\"chartdiv\", am4maps.MapChart);\n\n// Set map definition\nchart.geodata = am4geodata_usaLow;\n\n// Set projection\nchart.projection = new am4maps.projections.AlbersUsa();\n\n// Create map polygon series\nlet polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n//Set min/max fill color for each area\npolygonSeries.heatRules.push({\n  property: \"fill\",\n  target: polygonSeries.mapPolygons.template,\n  // min: chart.colors.getIndex(1).brighten(1),\n  // max: chart.colors.getIndex(1).brighten(-0.3)\n  min: chart.colors.getIndex(8).brighten(3),\n  max: chart.colors.getIndex(8).brighten(-0.3)\n});\n\n// Make map load polygon data (state shapes and names) from GeoJSON\npolygonSeries.useGeodata = true;\n\n// Set heatmap values for each state\npolygonSeries.data = [\n  {\n    id: \"US-AL\",\n    value: 4447100\n  },\n  {\n    id: \"US-AK\",\n    value: 626932\n  },\n  {\n    id: \"US-AZ\",\n    value: 5130632\n  },\n  {\n    id: \"US-AR\",\n    value: 2673400\n  },\n  {\n    id: \"US-CA\",\n    value: 33871648\n  },\n  {\n    id: \"US-CO\",\n    value: 4301261\n  },\n  {\n    id: \"US-CT\",\n    value: 3405565\n  },\n  {\n    id: \"US-DE\",\n    value: 783600\n  },\n  {\n    id: \"US-FL\",\n    value: 15982378\n  },\n  {\n    id: \"US-GA\",\n    value: 8186453\n  },\n  {\n    id: \"US-HI\",\n    value: 1211537\n  },\n  {\n    id: \"US-ID\",\n    value: 1293953\n  },\n  {\n    id: \"US-IL\",\n    value: 12419293\n  },\n  {\n    id: \"US-IN\",\n    value: 6080485\n  },\n  {\n    id: \"US-IA\",\n    value: 2926324\n  },\n  {\n    id: \"US-KS\",\n    value: 2688418\n  },\n  {\n    id: \"US-KY\",\n    value: 4041769\n  },\n  {\n    id: \"US-LA\",\n    value: 4468976\n  },\n  {\n    id: \"US-ME\",\n    value: 1274923\n  },\n  {\n    id: \"US-MD\",\n    value: 5296486\n  },\n  {\n    id: \"US-MA\",\n    value: 6349097\n  },\n  {\n    id: \"US-MI\",\n    value: 9938444\n  },\n  {\n    id: \"US-MN\",\n    value: 4919479\n  },\n  {\n    id: \"US-MS\",\n    value: 2844658\n  },\n  {\n    id: \"US-MO\",\n    value: 5595211\n  },\n  {\n    id: \"US-MT\",\n    value: 902195\n  },\n  {\n    id: \"US-NE\",\n    value: 1711263\n  },\n  {\n    id: \"US-NV\",\n    value: 1998257\n  },\n  {\n    id: \"US-NH\",\n    value: 1235786\n  },\n  {\n    id: \"US-NJ\",\n    value: 8414350\n  },\n  {\n    id: \"US-NM\",\n    value: 1819046\n  },\n  {\n    id: \"US-NY\",\n    value: 18976457\n  },\n  {\n    id: \"US-NC\",\n    value: 8049313\n  },\n  {\n    id: \"US-ND\",\n    value: 642200\n  },\n  {\n    id: \"US-OH\",\n    value: 11353140\n  },\n  {\n    id: \"US-OK\",\n    value: 3450654\n  },\n  {\n    id: \"US-OR\",\n    value: 3421399\n  },\n  {\n    id: \"US-PA\",\n    value: 12281054\n  },\n  {\n    id: \"US-RI\",\n    value: 1048319\n  },\n  {\n    id: \"US-SC\",\n    value: 4012012\n  },\n  {\n    id: \"US-SD\",\n    value: 754844\n  },\n  {\n    id: \"US-TN\",\n    value: 5689283\n  },\n  {\n    id: \"US-TX\",\n    value: 20851820\n  },\n  {\n    id: \"US-UT\",\n    value: 2233169\n  },\n  {\n    id: \"US-VT\",\n    value: 608827\n  },\n  {\n    id: \"US-VA\",\n    value: 7078515\n  },\n  {\n    id: \"US-WA\",\n    value: 5894121\n  },\n  {\n    id: \"US-WV\",\n    value: 1808344\n  },\n  {\n    id: \"US-WI\",\n    value: 5363675\n  },\n  {\n    id: \"US-WY\",\n    value: 493782\n  }\n];\n\n// Set up heat legend\nlet heatLegend = chart.createChild(am4maps.HeatLegend);\nheatLegend.id = \"heatLegend\";\nheatLegend.series = polygonSeries;\nheatLegend.align = \"right\";\nheatLegend.valign = \"bottom\";\nheatLegend.width = am4core.percent(35);\nheatLegend.marginRight = am4core.percent(4);\nheatLegend.background.fill = am4core.color(\"#000\");\nheatLegend.background.fillOpacity = 0.05;\nheatLegend.padding(5, 5, 5, 5);\n\n// Set up custom heat map legend labels using axis ranges\nlet minRange = heatLegend.valueAxis.axisRanges.create();\nminRange.label.horizontalCenter = \"left\";\n\nlet maxRange = heatLegend.valueAxis.axisRanges.create();\nmaxRange.label.horizontalCenter = \"right\";\n\n// Blank out internal heat legend value axis labels\nheatLegend.valueAxis.renderer.labels.template.adapter.add(\"text\", function(labelText) {\n  return \"\";\n});\n\n// Update heat legend value labels\npolygonSeries.events.on(\"datavalidated\", function(ev) {\n  let heatLegend = ev.target.map.getKey(\"heatLegend\");\n  let min = heatLegend.series.dataItem.values.value.low;\n  let minRange = heatLegend.valueAxis.axisRanges.getIndex(0);\n  minRange.value = min;\n  minRange.label.text = \"\" + heatLegend.numberFormatter.format(min);\n\n  let max = heatLegend.series.dataItem.values.value.high;\n  let maxRange = heatLegend.valueAxis.axisRanges.getIndex(1);\n  maxRange.value = max;\n  maxRange.label.text = \"\" + heatLegend.numberFormatter.format(max);\n});\n\n// Configure series tooltip\nlet polygonTemplate = polygonSeries.mapPolygons.template;\npolygonTemplate.tooltipText = \"{name}: {value}\";\npolygonTemplate.nonScalingStroke = true;\npolygonTemplate.strokeWidth = 0.5;\n\n// Create hover state and set alternative fill color\nlet hs = polygonTemplate.states.create(\"hover\");\nhs.properties.fill = am4core.color(\"#3c5bdc\");\n\n// Function that fires when a State is clicked on\nconst onStateClick=(sName)=>{\n  props.setSName(sName)\n  history.push('/state-page')\n  \n}\n\n// Created clickable States\npolygonTemplate.events.on(\"hit\", function(ev){\n  // Create function calls that will fire when a State is clicked\n  onStateClick(ev.target.dataItem.dataContext.name)\n})\n},[props,history])\n\n\n\n  return(\n    <div id=\"chartdiv\"></div>\n  )\n}\n\nexport default Map","import React from 'react'\nimport './HomePageCss.css'\n\nimport Map from '../../components/Map/Map.js'\n\nfunction HomePage(props){\n\n// Name passed from the State clicked on\nconst setStateName = props.setSName\nconst chart = props.chart\n\n  return(\n    <div id=\"home-container\">\n    <div className=\"b-label-title\">title</div>\n    <div className=\"b-updated-lable\">update box</div>\n    <div className=\"b-tweet-label\">tweet</div>\n    <div className=\"b-info-updater\">info box</div>\n    <div className=\"b-tweet-container\">tweet container</div>\n    <div className=\"b-us-map\">\n      <Map map={chart} setSName={setStateName}/>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport './NavBarCSS.css'\nimport { Link } from 'react-router-dom'\n\nfunction NavBar (props){\n  return(\n    <div id=\"nav-container\">\n      <div className=\"sub-nav-title\">COVID APP</div>\n      <div className=\"sub-nav-home-button\">\n        <Link to=\"/\">HOME</Link>\n        </div>\n      <div className=\"sub-nav-login-button\">Login</div>\n      <div className=\"sub-nav-signup-button\">Signup</div>\n    </div>\n  )\n}\n\nexport default NavBar","import React, { useState } from 'react';\n\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css'\n\n\nimport StatePage from './components/State_Page/State-Page.js'\nimport HomePage from './pages/HomePage/HomePage.js'\nimport NavBar from './components/NavBar/NavBar.js'\n\n\n\nfunction App(props) {\n  //Create State to store State name. setStateName is passed to the map and stateName is passed to State-Page\n  const [stateName,setStateName]=useState('')\n\n\n  const renderStatePage =(props)=>{\n    return(\n      <StatePage sName={stateName}/>\n    )\n  }\n\n  const renderHomePage =(props)=>{\n    return(\n      <HomePage setSName={setStateName}/>\n    )\n  }\n  \n  return (\n\n    \n      <div id={'app-container'}>\n        <div className=\"nav-bar\">\n          <NavBar/>\n        </div>\n  {/*----------------------------------------------------- */}\n        <div className={\"body-container\"}>\n        <Switch>\n          <Route exact path=\"/\" render={renderHomePage} />\n          <Route exact path=\"/state-page\" render={renderStatePage} />\n        </Switch>\n      </div>\n    </div>\n    \n\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}